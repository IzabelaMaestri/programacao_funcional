gera1 :: [Int] -> [Int]
gera1 xs = [ x*x*x | x <- xs, x > 3 && x < 11]

>gera1 [1..20]
[64,125,216,343,512,729,1000]

gera2 :: [Int] -> [Int]
gera2 xs = [(x,y)| x<-xs, y<-[x..x*3], x<=5]

Prelude> [(x,y)| x<-[1..5], y<-[x..x*3]]
[(1,1),(1,2),(1,3),
(2,2),(2,3),(2,4),(2,5),(2,6),
(3,3),(3,4),(3,5),(3,6),(3,7),(3,8),(3,9),
(4,4),(4,5),(4,6),(4,7),(4,8),(4,9),(4,10),(4,11),(4,12),
(5,5),(5,6),(5,7),(5,8),(5,9),(5,10),(5,11),(5,12),(5,13),(5,14),(5,15)]

gera3 :: [Int] -> [Int] -> [Int]
gera3 xs ys = [ x++y | x<-xs ++ y<-ys]

Prelude> [1..15] ++ [1..16] ++ [15,16]
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,15,16]

gera4 :: [Int] -> [Int]
gera4 xs = [ (x,y) | x<-even(xs), y<-[x+1]]

Prelude> [(even(x),y)|x<-[1..10], y<-[x+1]]
[(False,2),(True,3),(False,4),(True,5),(False,6),(True,7),(False,8),(True,9),(False,10),(True,11)]